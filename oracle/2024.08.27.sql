-- Q1. 10번 부서 소속 사원을 출력하기
SELECT *
FROM EMP
WHERE DEPTNO = 10;

-- 이름이 SCOTT인 사원 출력하기
SELECT *
FROM EMP
WHERE ENAME = 'SCOTT';

-- Q2. 입사일이 1981년 01월 01일 이전인 사원만 출력하기
SELECT * 
FROM EMP
WHERE HIREDATE <= '1981/01/01';

SELECT * 
FROM EMP
WHERE HIREDATE <= '81/01/01';

SELECT *
FROM EMP
WHERE HIREDATE <= TO_DATE('1981/01/01', 'YYYY/MM/DD');

SELECT *
FROM EMP
WHERE HIREDATE <= TO_DATE('01/01/1981','DD/MM/YYYY');

SELECT *
FROM EMP
WHERE HIREDATE <= TO_DATE('1981-01-01', 'YYYY-MM-DD');

SELECT *
FROM EMP
WHERE HIREDATE <= TO_DATE('01-01-1981','DD-MM-YYYY');

SELECT *
FROM EMP
WHERE HIREDATE <= '1981-01-01';

-- Q3. 부서번호가 10이고 직급이 MANAGER 인 사원만 출력하기
SELECT *
FROM EMP
WHERE DEPTNO = 10 
    AND JOB = 'MANAGER';

-- 부서번호가 10이거나 직급이 MANAGER 인 사원만 출력하기
SELECT *
FROM EMP
WHERE DEPTNO = 10 
    OR JOB = 'MANAGER';
    
    
-- Q4. 10번 부서에 소속된 사원만 제외하고 나머지 사원의 정보를 출력하기

SELECT *
FROM EMP
WHERE DEPTNO != 10;

SELECT *
FROM EMP
WHERE DEPTNO <> 10;

SELECT *
FROM EMP
WHERE DEPTNO ^= 10;

SELECT *
FROM EMP
WHERE NOT DEPTNO = 10;

SELECT *
FROM EMP
MINUS
SELECT *
FROM EMP
WHERE DEPTNO = 10;

-- Q5. 급여가 1000에서 1500 사이인 사원을 출력하기
SELECT *
FROM EMP
WHERE SAL >= 1000
    AND SAL <= 1500;

SELECT *
FROM EMP
WHERE SAL BETWEEN 1000 AND 1500;

SELECT *
FROM EMP
WHERE SAL>=1000
INTERSECT
SELECT *
FROM EMP
WHERE SAL<=1500;

-- Q6. 급여가 1000 미만이거나 1500 초과인 사원을 출력하기
SELECT *
FROM EMP
WHERE SAL < 1000
    OR SAL > 1500;

SELECT *
FROM EMP
WHERE NOT (SAL >= 1000 AND SAL <= 1500);

SELECT *
FROM EMP
WHERE SAL NOT BETWEEN 1000 AND 1500;

SELECT *
FROM EMP
WHERE SAL < 1000
UNION
SELECT *
FROM EMP
WHERE SAL > 1500;

SELECT *
FROM EMP
MINUS            
SELECT *     
FROM EMP
WHERE SAL BETWEEN 1000 AND 1500;

-- Q7. 커미션이 300이거나 500이거나 1400인 사원을 출력하기
SELECT *
FROM EMP
WHERE COMM = 300 
    OR COMM = 500 
    OR COMM = 1400;

SELECT *
FROM EMP
WHERE COMM IN (300,500,1400);

SELECT *
FROM EMP
WHERE COMM = 300
UNION
SELECT *
FROM EMP
WHERE COMM = 500
UNION
SELECT *
FROM EMP
WHERE COMM = 1400;

-- Q8. 1982년에 입사한 사원 출력하기
SELECT *
FROM EMP
WHERE HIREDATE >= '82/01/01'
    AND HIREDATE <= '82/12/31';
    
SELECT *
FROM EMP
WHERE HIREDATE BETWEEN '82/01/01' 
    AND '82/12/31';

SELECT *
FROM EMP
WHERE  HIREDATE >= '1982/01/01'
    AND HIREDATE <= '1982/12/31';
    
SELECT *
FROM EMP
WHERE  HIREDATE BETWEEN '1982/01/01' AND '1982/12/31';

SELECT *
FROM EMP
WHERE HIREDATE BETWEEN TO_DATE('1982/01/01', 'YYYY/MM/DD') 
    AND TO_DATE('1982/12/31', 'YYYY/MM/DD');

SELECT *
FROM EMP
WHERE HIREDATE BETWEEN TO_DATE('1982-01-01', 'YYYY-MM-DD') 
    AND TO_DATE('1982-12-31', 'YYYY-MM-DD');
    
SELECT *
FROM EMP
WHERE HIREDATE LIKE '82%';

SELECT *
FROM EMP
WHERE SUBSTR(HIREDATE,1,2) = '82';

SELECT *
FROM EMP
WHERE TO_CHAR(HIREDATE, 'YYYY') = '1982';

-- Q9. 사원 이름이 F로 시작하는 사원을 출력하기
SELECT * 
FROM EMP 
WHERE ENAME LIKE 'F%';

SELECT *
FROM EMP
WHERE SUBSTR(ENAME, 1, 1) = 'F';

SELECT *
FROM EMP
WHERE SUBSTR(ENAME,1,1) = UPPER('f');

SELECT *
FROM EMP
WHERE UPPER(SUBSTR(ENAME, 1, 1)) = 'F';

SELECT * 
FROM EMP 
WHERE ENAME LIKE 'F%'
    OR ENAME LIKE 'f%';
    
-- Q10. 이름에 M 이 포함되어 있는 사원을 출력하기
SELECT *
FROM EMP
WHERE ENAME LIKE '%M%';

SELECT *
FROM EMP
WHERE SUBSTR(ENAME, 1, 1) = 'M'
    OR SUBSTR(ENAME, 2, 1) = 'M'
    OR SUBSTR(ENAME, 3, 1) = 'M'
    OR SUBSTR(ENAME, 4, 1) = 'M'
    OR SUBSTR(ENAME, 5, 1) = 'M'
    OR SUBSTR(ENAME, 6, 1) = 'M'
    OR SUBSTR(ENAME, 7, 1) = 'M'
    OR SUBSTR(ENAME, 8, 1) = 'M'
    OR SUBSTR(ENAME, 9, 1) = 'M'
    OR SUBSTR(ENAME, 10, 1) = 'M';

-- Q11. 이름이 N으로 끝나는 사원을 출력하기
SELECT *
FROM EMP
WHERE ENAME LIKE '%N';

SELECT *
FROM EMP
WHERE SUBSTR(ENAME, -1,1) = 'N';

SELECT *
FROM EMP
WHERE SUBSTR(ENAME, LENGTH(ENAME), 1) = 'N';

SELECT *
FROM EMP
WHERE UPPER(SUBSTR(ENAME, -1, 1)) = 'N';

SELECT *
FROM EMP
WHERE INSTR(ENAME, 'N', -1) = LENGTH(ENAME);

SELECT *
FROM EMP
WHERE SUBSTR(ENAME, 1, 1) = 'N'
    OR SUBSTR(ENAME, 2, 2) = 'N'
    OR SUBSTR(ENAME, 3, 3) = 'N'
    OR SUBSTR(ENAME, 4, 4) = 'N'
    OR SUBSTR(ENAME, 5, 5) = 'N'
    OR SUBSTR(ENAME, 6, 6) = 'N'
    OR SUBSTR(ENAME, 7, 7) = 'N'
    OR SUBSTR(ENAME, 8, 8) = 'N'
    OR SUBSTR(ENAME, 9, 9) = 'N'
    OR SUBSTR(ENAME, 10, 10) = 'N';

-- Q12. 이름의 두 번째 글자가 A인 사원을 출력하기
SELECT *
FROM EMP
WHERE ENAME LIKE '_A%';

SELECT *
FROM EMP
WHERE INSTR(ENAME, 'A', 2) = 2;

SELECT *
FROM EMP
WHERE SUBSTR(ENAME, 2, 1) = 'A';
    
SELECT *
FROM EMP
WHERE UPPER(SUBSTR(ENAME, 2, 1)) = 'A';

-- Q13. 이름의 세 번째 글자가 A인 사원을 출력하기
SELECT *
FROM EMP
WHERE ENAME LIKE '__A%';

SELECT *
FROM EMP
WHERE INSTR(ENAME, 'A', 3) = 3;

SELECT *
FROM EMP
WHERE SUBSTR(ENAME, 3, 1) = 'A';
    
SELECT *
FROM EMP
WHERE UPPER(SUBSTR(ENAME, 3, 1)) = 'A';


-- Q14. 이름에 A가 포함되어 있지 않은 사원을 출력하기
SELECT *
FROM EMP
WHERE ENAME NOT LIKE '%A%';

SELECT *
FROM EMP
WHERE INSTR(ENAME, 'A') = 0;

SELECT *
FROM EMP
MINUS
SELECT *
FROM EMP
WHERE ENAME LIKE '%A%';

SELECT *
FROM EMP
WHERE NOT INSTR(ENAME, 'A') > 0;

SELECT *
FROM EMP
WHERE LENGTH(REPLACE(ENAME, 'A', '')) = LENGTH(ENAME);

-- CEIL, FLOOR 함수로 숫자 출력하기
SELECT CEIL(3.14),
    FLOOR(3.14),
    CEIL(-3.14),
    FLOOR(-3.14)
FROM DUAL;

-- MOD 함수를 사용하여 나머지 값 출력하기
SELECT MOD(15,6),
    MOD(10,2),
    MOD(11,2)
FROM DUAL;

-- SYSDATE 함수를 사용하여 날짜 출력하기
SELECT SYSDATE AS NOW,
    SYSDATE - 1 AS YESTERDAY,
    SYSDATE + 1 AS TOMORROW
FROM DUAL;

-- 3개월 후 날짜 구하기
SELECT SYSDATE,
    ADD_MONTHS(SYSDATE, 3)
FROM DUAL;

-- 입사 10주년이 되는 사원들 데이터 출력하기
SELECT EMPNO, ENAME, HIREDATE,
    ADD_MONTHS(HIREDATE, 120) AS WORK10YEAR
FROM EMP;

--  입사 52년 미만인 사원 데이터 출력하기
SELECT EMPNO, ENAME, HIREDATE, ADD_MONTHS(HIREDATE,624)
FROM EMP
WHERE ADD_MONTHS(HIREDATE,624) > SYSDATE;

--  입사42년 미만인 사원 데이터 출력하기
SELECT EMPNO, ENAME, HIREDATE,
ADD_MONTHS(HIREDATE, 504) AS WORK42YEAR
FROM EMP
WHERE ADD_MONTHS(HIREDATE, 504) > SYSDATE;


-- 입사일과 현재일 사이의 개월 수를 출력하기
SELECT EMPNO, ENAME, HIREDATE, SYSDATE,
    MONTHS_BETWEEN(HIREDATE, SYSDATE) AS MONTHS1,
    MONTHS_BETWEEN(SYSDATE, HIREDATE) AS MONTHS2,
    TRUNC(MONTHS_BETWEEN(SYSDATE, HIREDATE)) AS MONTHS3
FROM EMP;

-- NEXT_DAY, LAST_DAY 함수를 사용하여 출력하기
SELECT SYSDATE,
    NEXT_DAY(SYSDATE, '월요일'),
    LAST_DAY(SYSDATE)
FROM DUAL;

-- 숫자와 문자열(숫자)을 더하여 출력하기
SELECT EMPNO, ENAME, EMPNO+50
FROM EMP
WHERE ENAME = 'SCOTT';

SELECT EMPNO, ENAME, EMPNO+'500'
FROM EMP
WHERE ENAME = 'SCOTT';

-- 문자열(숫자)과 숫자을 더하여 출력하기
SELECT 'ABCD' + EMPNO, EMPNO
FROM EMP
WHERE ENAME = 'SCOTT';

-- 연/월/일 시:분:초
SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS')
FROM DUAL;

-- 월과 요일을 다양한 형식으로 출력하기
SELECT SYSDATE,
    TO_CHAR(SYSDATE, 'MM') AS MM,
    TO_CHAR(SYSDATE, 'MON') AS MON,
    TO_CHAR(SYSDATE, 'MONTH') AS MONTH,
    TO_CHAR(SYSDATE, 'DD') AS DD,
    TO_CHAR(SYSDATE, 'DY') AS DY,
    TO_CHAR(SYSDATE, 'DAY') AS DAY
FROM DUAL;

-- 여러 언어로 날짜(월) 출력하기
SELECT SYSDATE,
    TO_CHAR(SYSDATE, 'MM') AS MM,
    TO_CHAR(SYSDATE, 'MON', 'NLS_DATE_LANGUAGE = KOREAN') AS MON_KOR,
    TO_CHAR(SYSDATE, 'MON', 'NLS_DATE_LANGUAGE = JAPANESE') AS MON_JPN,
    TO_CHAR(SYSDATE, 'MON', 'NLS_DATE_LANGUAGE = ENGLISH') AS MON_ENG
FROM DUAL;

-- 여러 언어로 날짜(요일) 출력하기
SELECT SYSDATE,
    TO_CHAR(SYSDATE, 'DD') AS DD,
    TO_CHAR(SYSDATE, 'DY', 'NLS_DATE_LANGUAGE = KOREAN') AS DY_KOR,
    TO_CHAR(SYSDATE, 'DY', 'NLS_DATE_LANGUAGE = JAPANESE') AS DY_JPN,
    TO_CHAR(SYSDATE, 'DY', 'NLS_DATE_LANGUAGE = ENGLISH') AS DY_ENG,
    TO_CHAR(SYSDATE, 'DAY', 'NLS_DATE_LANGUAGE = KOREAN') AS DAY_KOR,
    TO_CHAR(SYSDATE, 'DAY', 'NLS_DATE_LANGUAGE = JAPANESE') AS DAY_JPN,
    TO_CHAR(SYSDATE, 'DAY', 'NLS_DATE_LANGUAGE = ENGLISH') AS DAY_ENG
FROM DUAL;

-- SYSDATE 시간 형식 지정하여 출력하기
SELECT SYSDATE,
    TO_CHAR(SYSDATE, 'HH24:MI:SS') AS HH24MISS,
    TO_CHAR(SYSDATE, 'HH12:MI:SS AM') AS HHMISS_AM,
    TO_CHAR(SYSDATE, 'HH:MI:SS P.M.') AS HHMISS_PM
FROM DUAL;


-- 여러 가지 숫자 형식을 사용하여 급여 출력하기
SELECT SAL,
    TO_CHAR(SAL, '$999,999') AS SAL_$,
    TO_CHAR(SAL, 'L999,999') AS SAL_L,
    TO_CHAR(SAL, '999,999.00') AS SAL_1,
    TO_CHAR(SAL, '000,999,999.00') AS SAL_2,
    TO_CHAR(SAL, '000999999.99') AS SAL_3,
    TO_CHAR(SAL, '999,999,00') AS SAL_4
FROM EMP;

--  문자 데이터와 숫자 데이터를 연산하여 출력하기
SELECT 1300 - '1500',
    '1300' + 1500
FROM DUAL;

-- 문자 데이터끼리 연산하여 출력하기
SELECT '1,300' - '1,500'
FROM DUAL;


-- TO_NUMBER 함수로 연산하여 출력하기
SELECT TO_NUMBER('1,300', '999,999') - TO_NUMBER('1,500', '999,999')
FROM DUAL;

-- TO_DATE 함수로 문자 데이터를 날짜 데이터 변환하기
SELECT TO_DATE('2024-08-27', 'YYYY-MM-DD') AS TODATE1,
    TO_DATE('20240827', 'YYYY-MM-DD') AS TODATE2
FROM DUAL;

-- 1981년 6월 1일 이후에 입사한 사원 정보 출력하기
SELECT *
FROM EMP
WHERE HIREDATE > TO_DATE('1981/06/01', 'YYYY/MM/DD');

-- NVL 함수를 사용하여 출력하기
SELECT EMPNO, ENAME, SAL, COMM, SAL+COMM,
    NVL(COMM, 0),
    SAL+NVL(COMM,0)
FROM EMP;

-- NVL2 함수를 사용하여 출력하기
SELECT EMPNO, ENAME, COMM,
    NVL2(COMM, 'O', 'X'),
    NVL2(COMM, SAL*12+COMM, SAL*12) AS ANNSAL
FROM EMP;

-- DECODE 함수를 사용하여 출력하기
SELECT EMPNO, ENAME, JOB, SAL,
    DECODE(JOB,
        'MANAGER', SAL*1.1,
        'SALESMAN', SAL*1.05,
        'ANALYST', SAL,
        SAL*1.03) AS UPSAL
FROM EMP;

-- CASE 문을 사용하여 출력하기
SELECT EMPNO, ENAME, JOB, SAL,
    CASE JOB
        WHEN 'MANAGER' THEN SAL*1.1
        WHEN 'SALESMAN' THEN SAL*1.05
        WHEN 'ANALYST' THEN SAL
        ELSE SAL*1.03
    END AS UPSAL
FROM EMP;

-- 열 값에 따라서 출력 값이 달라지는 CASE문
SELECT EMPNO, ENAME, COMM,
    CASE
        WHEN COMM IS NULL THEN '해당사항 없음'
        WHEN COMM = 0 THEN '수당없음'
        WHEN COMM > 0 THEN '수당 : ' || COMM
    END AS COMM_TEXT
FROM EMP;

-- SUM 함수를 사용하여 급여 합계 출력하기
SELECT SUM(SAL)
FROM EMP;

--  SUM 함수를 사용하여 사원 이름과 급여 합계 출력하기
SELECT ENAME, SUM(SAL)
FROM EMP;

-- 추가 수당 합계 구하기
SELECT SUM(COMM)
FROM EMP;

-- 급여 합계 구하기
SELECT SUM(DISTINCT SAL),
    SUM(ALL SAL),
    SUM(SAL)
FROM EMP;

-- EMP 테이블의 데이터 개수 구하기
SELECT COUNT(*)
FROM EMP;

-- 부서 번호가 30번인 직원 수 구하기
SELECT COUNT(*)
FROM EMP
WHERE DEPTNO = 30;

-- COUNT 함수를 사용하여 급여 개수 구하기
SELECT COUNT(SAL),
    COUNT(DISTINCT SAL),
    COUNT(ALL SAL)
FROM EMP;

-- COUNT 함수를 사용하여 추가 수당 열 개수 출력하기
SELECT COUNT(COMM)
FROM EMP;

-- COUNT 함수와 IS NOT NULL를 사용하여 추가 수당 열 개수 출력하기
SELECT COUNT(COMM)
FROM EMP
WHERE COMM IS NOT NULL;

-- 부서 번호가 10번인 사원들의 최대 급여 출력하기
SELECT MAX(SAL)
FROM EMP
WHERE DEPTNO = 10;

-- 부서 번호가 10번인 사원들의 최소 급여 출력하기
SELECT MIN(SAL)
FROM EMP
WHERE DEPTNO = 10;

-- 부서 번호가 20인 사원의 입사일 중 제일 최근 입사일 출력하기
SELECT MAX(HIREDATE)
FROM EMP
WHERE DEPTNO = 20;

-- 부서 번호가 20인 사원의 입사일 중 제일 오래된 입사일 출력하기
SELECT MIN(HIREDATE)
FROM EMP
WHERE DEPTNO = 20;

-- 부서 번호가 30인 사원들의 평균 급여 출력하기
SELECT AVG(SAL)
FROM EMP
WHERE DEPTNO = 30;

-- 중복을 제거한 부서 번호가 30인 사원 급여 열의 평균 급여 출력하기
SELECT AVG(DISTINCT SAL)
FROM EMP
WHERE DEPTNO = 30;




